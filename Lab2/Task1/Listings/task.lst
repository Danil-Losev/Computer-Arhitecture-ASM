


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             MYCODE, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E3A0A020        MOV              R10, #32    ; Constant 32
    5 00000004 E3A0B009        MOV              R11, #9     ; Constant 9
    6 00000008 E3A0C005        MOV              R12, #5     ; Constant 5
    7 0000000C         
    8 0000000C         ; R9 is the numerator, R8 is the denominator, R7 is the 
                       result (quotient)
    9 0000000C         
   10 0000000C E3A0005F        MOV              R0, #95     ; F = 95
   11 00000010         
   12 00000010         ; Calculation: (F - 32) * 5 / 9
   13 00000010 E040100A        SUB              R1, R0, R10 ; F - 32
   14 00000014 E0020C91        MUL              R2, R1, R12 ; (F - 32) * 5
   15 00000018         
   16 00000018 E1A09002        MOV              R9, R2      ; Numerator = (F - 
                                                            32) * 5
   17 0000001C E1A0800B        MOV              R8, R11     ; Denominator = 9
   18 00000020 EB000008        BL               DIV         ; Calculate: (F - 3
                                                            2) * 5 / 9
   19 00000024 E1A01007        MOV              R1, R7      ; Store the result 
                                                            in R1
   20 00000028         
   21 00000028         ; Calculate: (C * 9) / 5 + 32
   22 00000028 E3A02020        MOV              R2, #32     ; C = 32
   23 0000002C E0030B92        MUL              R3, R2, R11 ; C * 9
   24 00000030         
   25 00000030 E1A09003        MOV              R9, R3      ; Numerator = C * 9
                                                            
   26 00000034 E1A0800C        MOV              R8, R12     ; Denominator = 5
   27 00000038 EB000002        BL               DIV         ; Calculate: (C * 9
                                                            ) / 5   
   28 0000003C         ; BL jumps to a subroutine, storing the return address i
                       n the LR register for subsequent return
   29 0000003C         
   30 0000003C E1A04007        MOV              R4, R7      ; Store the result 
                                                            in R4
   31 00000040         
   32 00000040 E084300A        ADD              R3, R4, R10 ; result: (C * 9 / 
                                                            5) + 32
   33 00000044 EA000006        B                STOP        ; Go to infinite lo
                                                            op
   34 00000048         
   35 00000048         ; Division: divides R9 by R8, result in R7
   36 00000048         DIV
   37 00000048 E3A07000        MOV              R7, #0      ; Zero out result
   38 0000004C         
   39 0000004C         DIVISION
   40 0000004C E1590008        CMP              R9, R8      ; Compare numerator
                                                             and denominator
   41 00000050 BA000002        BLT              ENDDIV      ; If numerator is l
                                                            ess than denominato
                                                            r, exit
   42 00000054         ; BLT jumps to the specified label if the previous compa
                       rison (CMP) showed that the first number is less than th
                       e second
   43 00000054         
   44 00000054 E0499008        SUB              R9, R9, R8  ; Subtract denomina



ARM Macro Assembler    Page 2 


                                                            tor from numerator
   45 00000058 E2877001        ADD              R7, R7, #1  ; Increment result
   46 0000005C         
   47 0000005C EAFFFFFA        B                DIVISION    ; Repeat
   48 00000060         
   49 00000060         ENDDIV
   50 00000060 E12FFF1E        BX               LR          ; BX jumps to the a
                                                            ddress stored in th
                                                            e specified registe
                                                            r and may switch th
                                                            e processor mode
   51 00000064         
   52 00000064 EAFFFFFE 
                       STOP    B                STOP
   53 00000068         
   54 00000068                 END
Command Line: --debug --xref --diag_suppress=9931 --bi --apcs=interwork --depen
d=.\objects\task.d -o.\objects\task.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\AR
M\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA
 529" --list=.\listings\task.lst task.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DIV 00000048

Symbol: DIV
   Definitions
      At line 36 in file task.s
   Uses
      At line 18 in file task.s
      At line 27 in file task.s

DIVISION 0000004C

Symbol: DIVISION
   Definitions
      At line 39 in file task.s
   Uses
      At line 47 in file task.s
Comment: DIVISION used once
ENDDIV 00000060

Symbol: ENDDIV
   Definitions
      At line 49 in file task.s
   Uses
      At line 41 in file task.s
Comment: ENDDIV used once
MYCODE 00000000

Symbol: MYCODE
   Definitions
      At line 1 in file task.s
   Uses
      None
Comment: MYCODE unused
STOP 00000064

Symbol: STOP
   Definitions
      At line 52 in file task.s
   Uses
      At line 33 in file task.s
      At line 52 in file task.s

5 symbols
337 symbols in table
